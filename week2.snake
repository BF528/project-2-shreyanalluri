import pandas as pd

sample_csv = pd.read_csv('sample_sheet.csv', index_col='name')
CONDITIONS = set(sample_csv['condition'].tolist())
REPS = set(sample_csv['replicate'].tolist())

rule all:
    input:
        expand('results/project_2_chipseq/{condition}_{rep}.bam', condition=CONDITIONS, rep=REPS),
        expand('results/project_2_chipseq/{condition}_{rep}_sorted.bam', condition=CONDITIONS, rep=REPS),
        expand('results/project_2_chipseq/{condition}_{rep}.bai', condition=CONDITIONS, rep=REPS)
rule bowtie2_align:
    input: 
        fastq = 'samples/Full_files/{condition}_{rep}.fastq.gz',
        index_files = expand('results/project_2_chipseq/GRCh38_index.{ext}', ext=['1.bt2', '2.bt2', '3.bt2', '4.bt2', 'rev.1.bt2', 'rev.2.bt2'])
    output:
        bam_file = 'results/project_2_chipseq/{condition}_{rep}.bam'
    threads: 16
    params:
        index_basename = 'GRCh38_index'
    conda:
        'envs/bowtie2_env.yml'
    shell:
        '''
        bowtie2 -x {params.index_basename} -U {input.fastq} |samtools view -bS - > {output.bam_file}
        '''

rule samtools_sort:
	input:
		bam_file = 'results/project_2_chipseq/{condition}_{rep}.bam'
	output:
		sorted_bam = 'results/project_2_chipseq/{condition}_{rep}_sorted.bam'
	conda:
		'envs/samtools_env.yml'
	shell:
		'''
		samtools sort {input.bam_file} -o {output.sorted_bam}
		'''

rule samtools_idx:
	input:
		sorted_bam = 'results/project_2_chipseq/{condition}_{rep}_sorted.bam'
	output:
		index_bam = 'results/project_2_chipseq/{condition}_{rep}.bai'
	conda:
		'envs/samtools_env.yml'
	shell:
		'''
		samtools index {input.sorted_bam}
		'''

rule multiqc:
	input:
	output:
	params:
	conda:
		'envs/multiqc_env.yml'
	shell:
		'''
		'''

rule bamCoverage:
	input:
	output:
	threads: 4
	conda:
		'envs/deeptools_env.yml'
	shell:
		'''
		'''

rule multiBwSummary:
	input:
	output:
	conda:
		'envs/deeptools_env.yml'
	shell:
		'''
		'''

rule plotCorrelation:
	input:
	output:
	params:
	conda:
		'envs/deeptools_env.yml'
	shell:
		'''
		'''